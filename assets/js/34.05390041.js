(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{316:function(t,e,v){"use strict";v.r(e);var _=v(10),s=Object(_.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"vite-原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vite-原理"}},[t._v("#")]),t._v(" vite 原理")]),t._v(" "),e("h2",{attrs:{id:"实现原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现原理"}},[t._v("#")]),t._v(" 实现原理")]),t._v(" "),e("p",[t._v("它是基于浏览器的 type 为 module 的 script 可以直接下载 es module 模块实现的。")]),t._v(" "),e("p",[t._v("做了一个开发服务，根据请求的 url 来对模块做编译，调用 vite 插件来做不同模块的 transform。")]),t._v(" "),e("p",[t._v("但是 node_modules 下的文件有的包是 commonjs 的，并且可能有很多个模块，这时 vite 做了"),e("strong",[t._v("预构建")]),t._v("也叫 "),e("code",[t._v("deps optimize")]),t._v("。")]),t._v(" "),e("p",[t._v("它用 esbuild 分析依赖，然后用 esbuild 打包成 esm 的包之后输出到 node_modules/.vite 下，并生成了一个 metadata.json 来记录 hash。")]),t._v(" "),e("p",[t._v("浏览器里用 max-age 强缓存这些预打包的模块，但是带了 hash 的 query。这样当重新 build 的时候，可以通过修改 query 来触发更新。")]),t._v(" "),e("p",[t._v("在开发时通过 connect 起了一个服务器，调用 vite 插件来做 transform，并且对 node_modules 下的模块做了预构建，用 esbuild 打包。")]),t._v(" "),e("p",[t._v("在生产环境用 rollup 来打包，因为 vite 插件兼容了 rollup 插件，所以也是用同样的插件来处理，这样能保证开发和生产环境代码一致。")]),t._v(" "),e("p",[t._v("此外，vite 还基于 chokidar 和 websocket 来实现了模块热更新。")]),t._v(" "),e("p",[t._v("这就是 vite 的实现原理。")]),t._v(" "),e("p",[t._v("回想下，不管是基于浏览器 es module import 实现的编译服务，基于 esbuild 做的依赖预构建，基于 hash query 做的强缓存和缓存更新，还是兼容 rollup 的 vite 插件可以在开发服务和 rollup 里同时跑，这些功能实现都挺巧妙的。")]),t._v(" "),e("h2",{attrs:{id:"依赖预构建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#依赖预构建"}},[t._v("#")]),t._v(" 依赖预构建")]),t._v(" "),e("p",[t._v("由于 vite 的服务器将所有代码视为原生 ES 模块，因此需要将 CommonJS 或 UMD 发布的依赖项转化成 ESM。")]),t._v(" "),e("p",[t._v("vite 就借助了 esbuild 库(esbuild 是一个对 js 语法处理的库)，对用户使用的 CommonJS 规范的库进行了转换成 ESM，并且输入在了 node_module/.vite/deps 目录下。")]),t._v(" "),e("p",[t._v("一来可以统一 ESM 模块，统一模块规范。\n二来可以解决路径问题，方便路径重写。\n三来可以优化 http 多包传输的性能问题。")]),t._v(" "),e("p",[t._v("它会基于以下几个来源来决定是否需要重新运行预构建步骤：")]),t._v(" "),e("ul",[e("li",[t._v("包管理器的锁文件内容，例如 "),e("code",[t._v("package-lock.json")]),t._v("，"),e("code",[t._v("yarn.lock")]),t._v("，"),e("code",[t._v("pnpm-lock.yaml")]),t._v("，或者 "),e("code",[t._v("bun.lockb")]),t._v("；")]),t._v(" "),e("li",[t._v("补丁文件夹的修改时间；")]),t._v(" "),e("li",[e("code",[t._v("vite.config.js")]),t._v(" 中的相关字段；")]),t._v(" "),e("li",[e("code",[t._v("NODE_ENV")]),t._v(" 的值。")])]),t._v(" "),e("p",[t._v("只有在上述其中一项发生更改时，才需要重新运行预构建。")]),t._v(" "),e("h2",{attrs:{id:"环境变量"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#环境变量"}},[t._v("#")]),t._v(" 环境变量")]),t._v(" "),e("p",[t._v("vite 对环境变量的处理是借助于第三方库 dotenv 实现的，执行命令的时候，dotenv 会去读取 .env 文件，然后注入到 process 对象当中。用户可以使用 import.meta.env 去获取环境变量。下面是内建变量：")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("import.meta.env.MODE")]),t._v(": {string} 应用运行的模式。")]),t._v(" "),e("li",[e("strong",[t._v("import.meta.env.BASE_URL")]),t._v(": {string} 部署应用时的基本 URL。他由 base 配置项决定。")]),t._v(" "),e("li",[e("strong",[t._v("import.meta.env.PROD")]),t._v(": {boolean} 应用是否运行在生产环境（使用 "),e("code",[t._v("NODE_ENV='production'")]),t._v(" 运行开发服务器或构建应用时使用 "),e("code",[t._v("NODE_ENV='production'")]),t._v(" ）。")]),t._v(" "),e("li",[e("strong",[t._v("import.meta.env.DEV")]),t._v(": {boolean} 应用是否运行在开发环境 (永远与 "),e("code",[t._v("import.meta.env.PROD")]),t._v(" 相反)。")]),t._v(" "),e("li",[e("strong",[t._v("import.meta.env.SSR")]),t._v(": {boolean} 应用是否运行在 server 上")])]),t._v(" "),e("p",[t._v("用户自定义的环境变量需要以 "),e("code",[t._v("VITE\\_")]),t._v(" 为前缀才能获取到，例如下面的环境变量")]),t._v(" "),e("blockquote",[e("p",[t._v("VITE_SOME_KEY=123")]),t._v(" "),e("p",[t._v("DB_PASSWORD=foobar")])]),t._v(" "),e("p",[t._v("只有 "),e("code",[t._v("VITE_SOME_KEY")]),t._v(" 会被暴露为 "),e("code",[t._v("import.meta.env.VITE_SOME_KEY")]),t._v(" 提供给客户端源码，而 "),e("code",[t._v("DB_PASSWORD")]),t._v(" 则不会。")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[t._v("console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meta"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VITE_SOME_KEY")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "123"')]),t._v("\nconsole"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meta"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("env"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("DB_PASSWORD")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("h2",{attrs:{id:"vite-插件系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vite-插件系统"}},[t._v("#")]),t._v(" vite 插件系统")]),t._v(" "),e("p",[t._v("vite 插件编写时需要返回一个对象，对象包含了插件名称、插件执行时机和钩子函数。如下：")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'vite-aliases'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插件名字")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("enforce")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pre'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插件执行顺序")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("config")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" command "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// vite特有的config钩子，config为默认配置，command为命令")]),t._v("\n    gen "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Generator")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    gen"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("init")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用init，读取root目录，生成数组对象")]),t._v("\n    config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("resolve "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("alias")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("resolve"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?.")]),t._v("alias  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 有alias就合并")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("toArray")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("config"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("resolve"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("alias "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" any"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("gen"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("aliases\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" gen"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("aliases"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 没有就直接用生成的alias")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br")])]),e("p",[t._v("enfore 修饰符表示插件调用的时机：")]),t._v(" "),e("ul",[e("li",[t._v("pre：在 Vite 核心插件之前调用该插件")]),t._v(" "),e("li",[t._v("默认：在 Vite 核心插件之后调用该插件")]),t._v(" "),e("li",[t._v("post：在 Vite 构建插件之后调用该插件")])]),t._v(" "),e("h2",{attrs:{id:"vite-命令行指令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vite-命令行指令"}},[t._v("#")]),t._v(" vite 命令行指令")]),t._v(" "),e("p",[e("code",[t._v("vite dev")]),t._v(" 和 "),e("code",[t._v("vite serve")]),t._v(" 是 "),e("code",[t._v("vite")]),t._v(" 的别名，其额外选项如下：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("选项")]),t._v(" "),e("th")])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("--host [host]")])]),t._v(" "),e("td",[t._v("指定主机名称 ("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--port <port>")])]),t._v(" "),e("td",[t._v("指定端口 ("),e("code",[t._v("number")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--open [path]")])]),t._v(" "),e("td",[t._v("启动时打开浏览器 ("),e("code",[t._v("boolean / string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--cors")])]),t._v(" "),e("td",[t._v("启用 CORS ("),e("code",[t._v("boolean")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--strictPort")])]),t._v(" "),e("td",[t._v("如果指定的端口已在使用中，则退出 ("),e("code",[t._v("boolean")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--force")])]),t._v(" "),e("td",[t._v("强制优化器忽略缓存并重新构建 ("),e("code",[t._v("boolean")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-c, --config <file>")])]),t._v(" "),e("td",[t._v("使用指定的配置文件 ("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--base <path>")])]),t._v(" "),e("td",[t._v("公共基础路径（默认为："),e("code",[t._v("/")]),t._v("）("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-l, --logLevel <level>")])]),t._v(" "),e("td",[t._v("info / warn / error / silent ("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--clearScreen")])]),t._v(" "),e("td",[t._v("允许或禁用打印日志时清除屏幕 ("),e("code",[t._v("boolean")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--profile")])]),t._v(" "),e("td",[t._v("启动内置的 Node.js 调试器（查看 "),e("a",{attrs:{href:"https://cn.vitejs.dev/guide/troubleshooting.html#performance-bottlenecks",target:"_blank",rel:"noopener noreferrer"}},[t._v("性能瓶颈"),e("OutboundLink")],1),t._v("）")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-d, --debug [feat]")])]),t._v(" "),e("td",[t._v("显示调试日志 ("),e("code",[t._v("string / boolean")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-f, --filter <filter>")])]),t._v(" "),e("td",[t._v("过滤调试日志 ("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-m, --mode <mode>")])]),t._v(" "),e("td",[t._v("设置环境模式 ("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-h, --help")])]),t._v(" "),e("td",[t._v("显示可用的 CLI 选项")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-v, --version")])]),t._v(" "),e("td",[t._v("显示版本号")])])])]),t._v(" "),e("p",[e("code",[t._v("vite build")]),t._v(" 指令用于构建生产版本，其额外选项如下：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[e("strong",[t._v("选项")])]),t._v(" "),e("th")])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("--target <target>")])]),t._v(" "),e("td",[t._v("编译目标（默认为："),e("code",[t._v('"modules"')]),t._v("）("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--outDir <dir>")])]),t._v(" "),e("td",[t._v("输出目录（默认为："),e("code",[t._v("dist")]),t._v("）("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--assetsDir <dir>")])]),t._v(" "),e("td",[t._v("在输出目录下放置资源的目录（默认为："),e("code",[t._v('"assets"')]),t._v("）("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--assetsInlineLimit <number>")])]),t._v(" "),e("td",[t._v("静态资源内联为 base64 编码的阈值，以字节为单位（默认为："),e("code",[t._v("4096")]),t._v("）("),e("code",[t._v("number")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--ssr [entry]")])]),t._v(" "),e("td",[t._v("为服务端渲染配置指定入口文件 ("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--sourcemap [output]")])]),t._v(" "),e("td",[t._v("构建后输出 source map 文件（默认为："),e("code",[t._v("false")]),t._v("）("),e("code",[t._v('boolean / "inline" / "hidden"')]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--minify [minifier]")])]),t._v(" "),e("td",[t._v("允许或禁用最小化混淆，或指定使用哪种混淆器（默认为："),e("code",[t._v('"esbuild"')]),t._v("）("),e("code",[t._v('boolean / "terser" / "esbuild"')]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--manifest [name]")])]),t._v(" "),e("td",[t._v("构建后生成 manifest.json 文件 ("),e("code",[t._v("boolean / string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--ssrManifest [name]")])]),t._v(" "),e("td",[t._v("构建后生成 SSR manifest.json 文件 ("),e("code",[t._v("boolean / string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--emptyOutDir")])]),t._v(" "),e("td",[t._v("若输出目录在根目录外，强制清空输出目录 ("),e("code",[t._v("boolean")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-w, --watch")])]),t._v(" "),e("td",[t._v("在磁盘中模块发生变化时，重新构建 ("),e("code",[t._v("boolean")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-c, --config <file>")])]),t._v(" "),e("td",[t._v("使用指定的配置文件 ("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--base <path>")])]),t._v(" "),e("td",[t._v("公共基础路径（默认为："),e("code",[t._v("/")]),t._v("）("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-l, --logLevel <level>")])]),t._v(" "),e("td",[t._v("Info / warn / error / silent ("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--clearScreen")])]),t._v(" "),e("td",[t._v("允许或禁用打印日志时清除屏幕 ("),e("code",[t._v("boolean")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--profile")])]),t._v(" "),e("td",[t._v("启动内置的 Node.js 调试器（查看 "),e("a",{attrs:{href:"https://cn.vitejs.dev/guide/troubleshooting.html#performance-bottlenecks",target:"_blank",rel:"noopener noreferrer"}},[t._v("性能瓶颈"),e("OutboundLink")],1),t._v("）")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-d, --debug [feat]")])]),t._v(" "),e("td",[t._v("显示调试日志 ("),e("code",[t._v("string / boolean")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-f, --filter <filter>")])]),t._v(" "),e("td",[t._v("过滤调试日志 ("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-m, --mode <mode>")])]),t._v(" "),e("td",[t._v("设置环境模式 ("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-h, --help")])]),t._v(" "),e("td",[t._v("显示可用的 CLI 选项")])])])]),t._v(" "),e("p",[e("code",[t._v("vite optimize")]),t._v(" 指令用于依赖预构建，其额外选项如下：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[e("strong",[t._v("选项")])]),t._v(" "),e("th")])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("--force")])]),t._v(" "),e("td",[t._v("强制优化器忽略缓存并重新构建 ("),e("code",[t._v("boolean")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-c, --config <file>")])]),t._v(" "),e("td",[t._v("使用指定的配置文件 ("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--base <path>")])]),t._v(" "),e("td",[t._v("公共基础路径（默认为："),e("code",[t._v("/")]),t._v("）("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-l, --logLevel <level>")])]),t._v(" "),e("td",[t._v("Info / warn / error / silent ("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--clearScreen")])]),t._v(" "),e("td",[t._v("允许或禁用打印日志时清除屏幕 ("),e("code",[t._v("boolean")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-d, --debug [feat]")])]),t._v(" "),e("td",[t._v("显示调试日志 ("),e("code",[t._v("string / boolean")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-f, --filter <filter>")])]),t._v(" "),e("td",[t._v("过滤调试日志 ("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-m, --mode <mode>")])]),t._v(" "),e("td",[t._v("设置环境模式 ("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-h, --help")])]),t._v(" "),e("td",[t._v("显示可用的 CLI 选项")])])])]),t._v(" "),e("p",[e("code",[t._v("vite preview")]),t._v(" 用于本地预览构建产物，不可用于生产环境，其额外配置如下：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[e("strong",[t._v("选项")])]),t._v(" "),e("th")])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("--host [host]")])]),t._v(" "),e("td",[t._v("指定主机名称 ("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--port <port>")])]),t._v(" "),e("td",[t._v("指定端口 ("),e("code",[t._v("number")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--strictPort")])]),t._v(" "),e("td",[t._v("如果指定的端口已在使用中，则退出 ("),e("code",[t._v("boolean")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--open [path]")])]),t._v(" "),e("td",[t._v("启动时打开浏览器 ("),e("code",[t._v("boolean / string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--outDir <dir>")])]),t._v(" "),e("td",[t._v("输出目录（默认为："),e("code",[t._v("dist")]),t._v(")("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-c, --config <file>")])]),t._v(" "),e("td",[t._v("使用指定的配置文件 ("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--base <path>")])]),t._v(" "),e("td",[t._v("公共基础路径（默认为："),e("code",[t._v("/")]),t._v("）("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-l, --logLevel <level>")])]),t._v(" "),e("td",[t._v("Info / warn / error / silent ("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("--clearScreen")])]),t._v(" "),e("td",[t._v("允许或禁用打印日志时清除屏幕 ("),e("code",[t._v("boolean")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-d, --debug [feat]")])]),t._v(" "),e("td",[t._v("显示调试日志 ("),e("code",[t._v("string / boolean")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-f, --filter <filter>")])]),t._v(" "),e("td",[t._v("过滤调试日志 ("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-m, --mode <mode>")])]),t._v(" "),e("td",[t._v("设置环境模式 ("),e("code",[t._v("string")]),t._v(")")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("-h, --help")])]),t._v(" "),e("td",[t._v("显示可用的 CLI 选项")])])])])])}),[],!1,null,null,null);e.default=s.exports}}]);